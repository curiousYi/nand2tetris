// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=notSel0);
    Not(in=sel[1], out=notSel1);
    Not(in=sel[2], out=notSel2);
   
    Or(a=sel[1], b=sel[2], out=Or12);
    And(a=sel[1], b=sel[2], out=And12);
    Not(in=And12, out=NotAnd12);
    Nand(a=sel[1], b=sel[2], out=Nand12);
    Not(in=Nand12, out=NotNand12);
    Xor(a=sel[1], b=sel[2], out=Xor12);
    
    Not(in=Or12, out=U00);
    And(a=sel[2], b=Xor12, out=UZeroOne); 
    And(a=sel[1], b=Xor12, out=UOneZero);

    And(a=sel[0], b=And12, out=selh);
    And(a=sel[0], b=UOneZero, out=seld);
    And(a=sel[0], b=UZeroOne, out=self);
    And(a=sel[0], b=U00, out=selb);
    And(a=notSel0 ,b=And12, out=selg);
    And(a=notSel0, b=UOneZero,  out=selc);
    And(a=notSel0, b=UZeroOne,  out=sele);
    And(a=notSel0, b=U00, out=sela);

    Mux16(a[0..15]=false, b[0..15]=a[0..15], sel=sela, out=out0);
    Mux16(b[0..15]=b[0..15], a=out0, sel=selb, out=out1);
    Mux16(b[0..15]=c[0..15], a=out1, sel=selc, out=out2);
    Mux16(b[0..15]=d[0..15], a=out2, sel=seld, out=out3);
    Mux16(b[0..15]=e[0..15], a=out3, sel=sele, out=out4);
    Mux16(b[0..15]=f[0..15], a=out4, sel=self, out=out5);
    Mux16(b[0..15]=g[0..15], a=out5, sel=selg, out=out6);
    Mux16(b[0..15]=h[0..15], a=out6, sel=selh, out=out);
}
